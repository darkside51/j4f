#version 450

layout (location = 0) in vec3 in_normal;
layout (location = 1) in vec2 in_uv;
layout (location = 2) in vec3 in_light;
layout (location = 0) out vec4 outColor;

layout (set = 0, binding = 0) uniform UBO {
	int use_skin;
	mat4 skin_matrixes[192];
} u_ubo;

layout (set = 1, binding = 0) uniform sampler2D u_texture;

void main() {
	vec4 color = texture(u_texture, in_uv, 0.0);
	if (color.a < 0.5) {
		discard;
	} else {
		const float light = clamp(max(dot(in_normal, -in_light), 0.0), 0.75, 1.0);
		color.rgb *= 1.5 * light;
		outColor = color;
	}	
}