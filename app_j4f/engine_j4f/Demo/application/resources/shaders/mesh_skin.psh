#version 450

#define SHADOW_MAP_CASCADE_COUNT 3

layout (location = 0) in vec2 in_uv;
layout (location = 1) in vec3 in_normal;

layout (location = 0) out vec4 out_color;

layout (set = 0, binding = 0) uniform static_shadowUBO {
	vec4 cascade_splits;
	mat4 cascade_matrix[SHADOW_MAP_CASCADE_COUNT];
	mat4 view;
	vec3 light_direction;
} u_shadow;

layout (set = 2, binding = 0) uniform sampler2D u_texture_0;

void main() {
	vec4 color = texture(u_texture_0, in_uv);
	out_color = color;
	const float light = 0.2f + max(dot(in_normal, u_shadow.light_direction), 0.4f - 0.2f);
	out_color.rgb *= light;
}